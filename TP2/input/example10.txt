%% LEX %%
%literals = "+-/*=()"              
%ignore = " \t\n"
%tokens = ['VAR','NUMBER']

%) [_A-Za-z][_0-9A-Za-z]*  return('VAR', '')
%) \d+(\.\d+)? return('NUMBER', 't.value = float(t.value)')
%) .   error(f"Illegal character '{t.value[0]}', [{t.lexer.lineno}]",t.lexer.skip(1) )

%% YACC %%

%precedence = [('left','+','-'),('left','*','/'),('right','UMINUS')];

%ts = {}


~) def p_error(t): {|    print(f"Syntax error at '{t.value}', [{t.lexer.lineno}]") |}

~) def getval(n): {|    if n not in ts: |} {|        print(f"Undefined name '{n}'") |} {|    return ts.get(n,0) |}

/% y=yacc()
/% y.parse("3+4*7")


$$