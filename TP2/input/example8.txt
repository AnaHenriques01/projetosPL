%%YACC

/%

Calc : Comandos FIM                         {}
Comandos : Comandos Comando                 {}
Comandos : Comando                          {}
Comando : id '=' Exp                        {p.parser.registos[p[1]] = p[3]}
Comando : '!' Exp                           {print(p[2])}
Comando : '?' id                            {p.parser.registos[p[2]] = input(“Introduzir um valor inteiro: “) }
Comando : DUMP                              {print(p.parser.registos)}
Exp : Exp '+' Termo                         {p[0] = p[1] + p[3]}
Exp : Exp '-' Termo                         {p[0] = p[1] - p[3]}
Exp : Termo                                 {p[0] = p[1]}
Termo : Termo '*' Fator                     {p[0] = p[1] * p[3]}
Termo : Fator                               {p[0] = p[1]}
Fator : num                                 {p[0] = p[1]}
Fator : '(' Exp ')'                         {p[0] = p[2]}
Fator : id                                  {p[0] = p.parser.registos[p[1]]}

%%

/%parser = yacc.yacc()
/%parser.registos = {} 

%% LEX

%literals = ['+','-','*','/','(',')','=','?','!']   
%tokens = ['num', 'id', 'DUMP','FIM']  
%ignore = " \t\n"


[_A-Za-z]\w*            simpleToken('id','')
!!                      simpleToken('DUMP','')
\.                      simpleToken('FIM','')
\d+                     return('num','t.value = int(t.value)')
.                       error(f"Illegal character '{t.value[0]}', [{t.lexer.lineno}]",t.lexer.skip(1) )

lexer = lex.lex()
