
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'BCOM BFUNL BFUNY BGRAM BLEX BPARSER BYACC ECOM EFUNL EFUNY EGRAM EOF IGN LIT PREC TOK TS comm funL funY gram ig instructions literals preceList tokenList tsListPlySimple : EOFPlySimple : LexLex : BLEX VarsVars : Vars "+" VarVars : Var : LIT literalsVar : IGN igVar : TOK tokenList'
    
_lr_action_items = {'EOF':([0,],[2,]),'BLEX':([0,],[4,]),'$end':([1,2,3,4,5,7,11,12,13,],[0,-1,-2,-5,-3,-4,-6,-7,-8,]),'+':([4,5,7,11,12,13,],[-5,6,-4,-6,-7,-8,]),'LIT':([6,],[8,]),'IGN':([6,],[9,]),'TOK':([6,],[10,]),'literals':([8,],[11,]),'ig':([9,],[12,]),'tokenList':([10,],[13,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'PlySimple':([0,],[1,]),'Lex':([0,],[3,]),'Vars':([4,],[5,]),'Var':([6,],[7,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> PlySimple","S'",1,None,None,None),
  ('PlySimple -> EOF','PlySimple',1,'p_PlySiple_Empty','plySimple_yacc.py',20),
  ('PlySimple -> Lex','PlySimple',1,'p_PlySiple_notEmpty','plySimple_yacc.py',23),
  ('Lex -> BLEX Vars','Lex',2,'p_Lex','plySimple_yacc.py',29),
  ('Vars -> Vars + Var','Vars',3,'p_Vars_notEmpty','plySimple_yacc.py',32),
  ('Vars -> <empty>','Vars',0,'p_Vars_Empty','plySimple_yacc.py',35),
  ('Var -> LIT literals','Var',2,'p_Var_Literals','plySimple_yacc.py',38),
  ('Var -> IGN ig','Var',2,'p_Var_Ignore','plySimple_yacc.py',41),
  ('Var -> TOK tokenList','Var',2,'p_Var_ListTok','plySimple_yacc.py',44),
]
